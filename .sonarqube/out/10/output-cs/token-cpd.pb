¸+
[C:\Mentoria\SMO.BackEnd\SMO.Backend\SMO.Backend\Controllers\v1\Address\AddressController.cs
	namespace 	
SMO
 
. 
Backend 
. 
Controllers !
.! "
API" %
.% &
v1& (
.( )
Register) 1
{ 
[		 
Route		 

(		
 
$str		 
)		 
]		 
public

 

class

 
AddressController

 "
:

# $
ControllerBase

% 3
{ 
private 
readonly 
IAddressBusiness )
AddressBusiness* 9
;9 :
public 
AddressController  
(  !
IAddressBusiness! 1
addressBusiness2 A
)A B
{ 	
AddressBusiness 
= 
addressBusiness -
;- .
} 	
[ 	
HttpPost	 
( 
$str !
)! "
]" #
[ 	 
ProducesResponseType	 
( 
( 
int "
)" #
HttpStatusCode# 1
.1 2
OK2 4
,4 5
Type6 :
=; <
typeof= C
(C D
boolD H
)H I
)I J
]J K
[ 	 
ProducesResponseType	 
( 
( 
int "
)" #
HttpStatusCode# 1
.1 2

BadRequest2 <
)< =
]= >
public 
async 
Task 
< 
IActionResult '
>' (
CreateAddressUser) :
(: ;
[ 

FromHeader 
] 
int 
idUser #
,# $
[ 
FromBody 
] 
AddressCreateModel )
addressModel* 6
) 	
{ 	
var   
success   
=   
await   
AddressBusiness    /
.  / 0
CreateAddressUser  0 A
(  A B
addressModel  B N
,  N O
idUser  P V
)  V W
;  W X
if!! 
(!! 
success!! 
)!! 
return"" 
Ok"" 
("" 
success"" !
)""! "
;""" #
return$$ 

BadRequest$$ 
($$ 
)$$ 
;$$  
}%% 	
[-- 	
HttpPut--	 
(-- 
$str--  
)--  !
]--! "
[.. 	 
ProducesResponseType..	 
(.. 
(.. 
int.. "
).." #
HttpStatusCode..# 1
...1 2
OK..2 4
,..4 5
Type..6 :
=..; <
typeof..= C
(..C D
bool..D H
)..H I
)..I J
]..J K
[// 	 
ProducesResponseType//	 
(// 
(// 
int// "
)//" #
HttpStatusCode//# 1
.//1 2

BadRequest//2 <
)//< =
]//= >
public00 
async00 
Task00 
<00 
IActionResult00 '
>00' (
UpdateAddressById00) :
(00: ;
[11 

FromHeader11 
]11 
int11 
	idAddress11 &
,11& '
[22 
FromBody22 
]22 
AddressCreateModel22 )
addressModel22* 6
)33 	
{44 	
var55 
updated55 
=55 
await55 
AddressBusiness55  /
.55/ 0
UpdateAddress550 =
(55= >
addressModel55> J
,55J K
	idAddress55L U
)55U V
;55V W
if66 
(66 
updated66 
)66 
return77 
Ok77 
(77 
updated77 !
)77! "
;77" #
return99 

BadRequest99 
(99 
)99 
;99  
}:: 	
[<< 	

HttpDelete<<	 
]<< 
[== 	 
ProducesResponseType==	 
(== 
(== 
int== "
)==" #
HttpStatusCode==# 1
.==1 2
OK==2 4
,==4 5
Type==6 :
===; <
typeof=== C
(==C D
bool==D H
)==H I
)==I J
]==J K
[>> 	 
ProducesResponseType>>	 
(>> 
(>> 
int>> "
)>>" #
HttpStatusCode>># 1
.>>1 2

BadRequest>>2 <
)>>< =
]>>= >
public?? 
async?? 
Task?? 
<?? 
IActionResult?? '
>??' (
DeleteAddress??) 6
(??6 7
[@@ 

FromHeader@@ 
]@@ 
DeleteAddressModel@@ +
deleteAddressModel@@, >
)AA 	
{BB 	
varCC 
deletedCC 
=CC 
awaitCC 
AddressBusinessCC  /
.CC/ 0
DeleteAddressUserCC0 A
(CCA B
deleteAddressModelDD "
.DD" #
IdUserDD# )
,DD) *
deleteAddressModelEE "
.EE" #
	IdAddressEE# ,
)FF 
;FF 
ifHH 
(HH 
deletedHH 
)HH 
returnII 
OkII 
(II 
deletedII !
)II! "
;II" #
returnKK 

BadRequestKK 
(KK 
)KK 
;KK  
}LL 	
}MM 
}NN Þ
WC:\Mentoria\SMO.BackEnd\SMO.Backend\SMO.Backend\Controllers\v1\Login\LoginController.cs
	namespace 	
SMO
 
. 
Backend 
. 
Controllers !
.! "
v1" $
.$ %
Login% *
{ 
[		 
Route		 

(		
 
$str		 
)		 
]		 
public

 

class

 
LoginController

  
:

! "
ControllerBase

# 1
{ 
public 
readonly 
ILoginBusiness &
LoginBusiness' 4
;4 5
public 
LoginController 
( 
ILoginBusiness -
loginBusiness. ;
); <
{ 	
LoginBusiness 
= 
loginBusiness )
;) *
} 	
[ 	
HttpPost	 
] 
[ 	 
ProducesResponseType	 
( 
( 
int "
)" #
HttpStatusCode# 1
.1 2
OK2 4
,4 5
Type6 :
=; <
typeof= C
(C D
UserReturnModelD S
)S T
)T U
]U V
[ 	 
ProducesResponseType	 
( 
( 
int "
)" #
HttpStatusCode# 1
.1 2

BadRequest2 <
)< =
]= >
public 
async 
Task 
< 
IActionResult '
>' (
Login) .
(. /
[ 
FromBody 
] 
	UserLogin  
	userLogin! *
) 	
{ 	
var 
user 
= 
await 
LoginBusiness )
.) *
	LoginUser* 3
(3 4
	userLogin4 =
)= >
;> ?
if 
( 
user 
. 
Email 
is 
not 
null  $
)$ %
{   
var!! 
	userModel!! 
=!! 
new!! "
UserReturnModel!!# 2
(!!2 3
user!!3 7
)!!7 8
;!!8 9
return"" 
Ok"" 
("" 
	userModel"" "
)""" #
;""# $
}## 
return%% 

BadRequest%% 
(%% 
$str%% 6
)%%6 7
;%%7 8
}'' 	
}(( 
})) ¶+
WC:\Mentoria\SMO.BackEnd\SMO.Backend\SMO.Backend\Controllers\v1\Users\UsersController.cs
	namespace 	
SMO
 
. 
Backend 
. 
Controllers !
.! "
v1" $
.$ %
Users% *
{ 
[		 
Route		 

(		
 
$str		 
)		 
]		 
public

 

class

 
UsersController

  
:

! "
ControllerBase

# 1
{ 
private 
readonly 
IUserBusiness &
UserBusiness' 3
;3 4
public 
UsersController 
( 
IUserBusiness ,
userBusiness- 9
)9 :
{ 	
UserBusiness 
= 
userBusiness '
;' (
} 	
[ 	
HttpPost	 
( 
$str 
) 
] 
[ 	 
ProducesResponseType	 
( 
( 
int "
)" #
HttpStatusCode# 1
.1 2
OK2 4
,4 5
Type6 :
=; <
typeof= C
(C D
boolD H
)H I
)I J
]J K
[ 	 
ProducesResponseType	 
( 
( 
int "
)" #
HttpStatusCode# 1
.1 2

BadRequest2 <
)< =
]= >
public 
async 
Task 
< 
IActionResult '
>' (
RegisterUser) 5
(5 6
[ 
FromBody 
] 
UserCreateModel &
	userModel' 0
) 	
{ 	
if   
(   
!   
ValidationUser   
.    
ValidateUser    ,
(  , -
	userModel  - 6
)  6 7
)  7 8
return!! 

BadRequest!! !
(!!! "
$str!!" 7
)!!7 8
;!!8 9
var## 
success## 
=## 
await## 
UserBusiness##  ,
.##, -

CreateUser##- 7
(##7 8
	userModel##8 A
)##A B
;##B C
if$$ 
($$ 
success$$ 
)$$ 
return%% 
Ok%% 
(%% 
success%% !
)%%! "
;%%" #
else&& 
return'' 

BadRequest'' !
(''! "
$str''" M
)''M N
;''N O
}(( 	
[// 	
HttpPut//	 
(// 
$str// 
)// 
]// 
[00 	 
ProducesResponseType00	 
(00 
(00 
int00 "
)00" #
HttpStatusCode00# 1
.001 2
OK002 4
,004 5
Type006 :
=00; <
typeof00= C
(00C D
bool00D H
)00H I
)00I J
]00J K
[11 	 
ProducesResponseType11	 
(11 
(11 
int11 "
)11" #
HttpStatusCode11# 1
.111 2

BadRequest112 <
)11< =
]11= >
public22 
async22 
Task22 
<22 
IActionResult22 '
>22' (
UpdateUserById22) 7
(227 8
[33 

FromHeader33 
]33 
int33 
idUser33 #
,33# $
[44 
FromBody44 
]44 
UserUpdateModel44 &
	userModel44' 0
)55 	
{66 	
var77 
success77 
=77 
await77 
UserBusiness77  ,
.77, -

UpdateUser77- 7
(777 8
	userModel778 A
,77A B
idUser77C I
)77I J
;77J K
if88 
(88 
success88 
)88 
return99 
Ok99 
(99 
success99 !
)99! "
;99" #
return;; 

BadRequest;; 
(;; 
success;; %
);;% &
;;;& '
}<< 	
[CC 	

HttpDeleteCC	 
(CC 
$strCC  
)CC  !
]CC! "
[DD 	 
ProducesResponseTypeDD	 
(DD 
(DD 
intDD "
)DD" #
HttpStatusCodeDD# 1
.DD1 2
OKDD2 4
,DD4 5
TypeDD6 :
=DD; <
typeofDD= C
(DDC D
boolDDD H
)DDH I
)DDI J
]DDJ K
[EE 	 
ProducesResponseTypeEE	 
(EE 
(EE 
intEE "
)EE" #
HttpStatusCodeEE# 1
.EE1 2

BadRequestEE2 <
)EE< =
]EE= >
publicFF 
asyncFF 
TaskFF 
<FF 
IActionResultFF '
>FF' (

DeleteUserFF) 3
(FF3 4
[GG 

FromHeaderGG 
]GG 
intGG 
idUserGG #
)HH 	
{II 	
varJJ 
deletedJJ 
=JJ 
awaitJJ 
UserBusinessJJ  ,
.JJ, -
DeleteUserByIdJJ- ;
(JJ; <
idUserJJ< B
)JJB C
;JJC D
ifKK 
(KK 
deletedKK 
)KK 
returnLL 
OkLL 
(LL 
deletedLL !
)LL! "
;LL" #
returnNN 

BadRequestNN 
(NN 
deletedNN %
)NN% &
;NN& '
}OO 	
}RR 
}SS Ð

:C:\Mentoria\SMO.BackEnd\SMO.Backend\SMO.Backend\Program.cs
	namespace 	

VLIConecta
 
. 
RelSIOPPortos "
{ 
public 

static 
class 
Program 
{ 
public		 
static		 
void		 
Main		 
(		  
string		  &
[		& '
]		' (
args		) -
)		- .
{

 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults %
(% &

webBuilder& 0
=>1 3
{ 

webBuilder 
. 

UseStartup 
< 
Startup #
># $
($ %
)% &
;& '
} 
) 
; 
} 
} ¨%
:C:\Mentoria\SMO.BackEnd\SMO.Backend\SMO.Backend\Startup.cs
	namespace 	
SMO
 
. 
Backend 
{ 
public 

class 
Startup 
{ 
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public

 
Startup

 
(

 
IConfiguration

 %
configuration

& 3
,

3 4
IHostEnvironment

5 E
env

F I
)

I J
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddHttpClient "
(" #
)# $
;$ %
services 
. 
AddCors 
( 
setup "
=># %
setup& +
.+ ,
	AddPolicy, 5
(5 6
$str6 A
,A B
builderC J
=>K M
{ 
builder 
. 
AllowAnyOrigin &
(& '
)' (
. 
AllowAnyMethod &
(& '
)' (
. 
AllowAnyHeader &
(& '
)' (
;( )
} 
) 
) 
; 
services 
. 
AddControllers #
(# $
)$ %
;% &
services 
. 
AddSwaggerGen "
(" #
opt# &
=>' )
{ 
opt 
. 

SwaggerDoc 
( 
$str #
,# $
new% (
OpenApiInfo) 4
{ 
Version 
= 
$str "
," #
Title   
=   
$str   %
,  % &
Description!! 
=!!  !
$str!!" +
,!!+ ,
Contact"" 
="" 
new"" !
OpenApiContact""" 0
{## 
Name$$ 
=$$ 
$str$$ K
,$$K L
Url%% 
=%% 
new%% !
Uri%%" %
(%%% &
$str%%& H
)%%H I
}&& 
}'' 
)'' 
;'' 
}(( 
)(( 
;(( 
Map** 
.** 
Map** 
.** $
SetupDependenceInjection** ,
(**, -
services**- 5
)**5 6
;**6 7
}++ 	
public-- 
void-- 
	Configure-- 
(-- 
IApplicationBuilder.. 
app..  #
,..# $
IWebHostEnvironment// 
env//  #
)00 	
{11 	
app22 
.22 

UseSwagger22 
(22 
opt22 
=>22 !
{33 
opt44 
.44 
SerializeAsV244 !
=44" #
true44$ (
;44( )
}55 
)55 
;55 
app77 
.77 
UseSwaggerUI77 
(77 
opt77  
=>77! #
{88 
opt99 
.99 
DocumentTitle99 !
=99" #
$str99$ -
;99- .
opt:: 
.:: 
SwaggerEndpoint:: #
(::# $
$str::$ >
,::> ?
$str::@ N
)::N O
;::O P
};; 
);; 
;;; 
if== 
(== 
env== 
.== 
IsDevelopment== !
(==! "
)==" #
||==$ &
env==' *
.==* +
IsEnvironment==+ 8
(==8 9
$str==9 @
)==@ A
)==A B
{>> 
app?? 
.?? %
UseDeveloperExceptionPage?? -
(??- .
)??. /
;??/ 0
}@@ 
appBB 
.BB 
UseCorsBB 
(BB 
$strBB #
)BB# $
;BB$ %
appCC 
.CC 
UseHttpsRedirectionCC #
(CC# $
)CC$ %
;CC% &
appDD 
.DD 

UseRoutingDD 
(DD 
)DD 
;DD 
appEE 
.EE 
UseAuthorizationEE  
(EE  !
)EE! "
;EE" #
appFF 
.FF 
UseEndpointsFF 
(FF 
	endpointsFF &
=>FF' )
{GG 
	endpointsHH 
.HH 
MapControllersHH (
(HH( )
)HH) *
;HH* +
}II 
)II 
;II 
}JJ 	
}LL 
}MM 